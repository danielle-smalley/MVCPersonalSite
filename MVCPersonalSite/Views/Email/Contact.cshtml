@model WebApplication1.Models.ContactViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*<h2>Contact</h2>*@

@using reCAPTCHA.MVC;

<div>
    @if (ViewBag.CustomerMessage != null)
    {
        <p>
            @ViewBag.CustomerMessage
        </p>
    }
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div id="headerwrap">
        <div class="container">
            <div class="row jumbotron">
                <div class="col-lg-12" >
                    <h1>Send me a message, let's get in touch!</h1>

                </div>
            </div>
            <!-- /row -->
        </div>
        <!-- /container -->
    </div>
    <div class="container">
        <div class="row">
            <div class="col-md-4 col-md-offset-4">
                <a class="links" href="https://www.linkedin.com/in/danielle-smalley/" target="_blank"><i class="fab fa-linkedin class" target="_blank"></i></a>
            </div>
                <a class="links" href="https://github.com/danielle-smalley" target="_blank"><i class="fab fa-github class" target="_blank"></i></a>
        </div>
    </div>
    <br/>
    <br/>

    <div class="container">
        <div class="form-horizontal">
            <div class="col-lg-12">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br/>
                @Html.Recaptcha()
                <p style="font-weight:700;font-style:italic;" class="text-danger text-center">
                    @Html.ValidationMessage("ReCaptcha")
                </p>
                <br/>
                <div class="form-group">
                    <div class="col-md-offset-5 col-md-4">
                        <input type="submit" value="Send Message" class="btn btn-" />
                    </div>
                </div>
            </div>
        </div>
    </div>

}
<br />
<br />
<br />


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
